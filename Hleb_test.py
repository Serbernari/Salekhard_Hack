#!/usr/bin/env python
# coding: utf-8


import numpy as np
import pandas as pd


# In[21]:


hleb_df = pd.read_excel('тесттест.xlsx')


# In[32]:


def hleb_test_to_vec(test_res_input):
    hleb_df = hleb_df.replace({"Да, обязательно": 3,"Да, если не очень занят(а)": 2,                "Нет, если вижу что она скорее всего справится сама":1,                "Могу перевести только на английский":0})
    hleb_df = hleb_df.replace({"Соглашусь, даже если очень занят": 3,'Только легальные и из аптеки, а не "там около трубы закопаны"': 2,                    "Соглашусь, если больше совсем уж некому":1,                    "Почему бы не сходить самому или не вызвать скорую?":0})
    hleb_df = hleb_df.replace({"Да, озеленение это круто. Надеюсь переживет 9 месяцев Ямальской зимы.": 3,"Если мне дадут саженцы - почему нет?": 2,                    "Скорее нет чем да":1,                    "Для этого есть специализированные службы, которые лучше справятся":0})
    hleb_df = hleb_df.replace({"Да, и сам люблю участвовать в них": 3,"Да, это потрясающий эмоциональный аттракцион": 2,                    "Только скоростное вязание крючком":1,                    "Нет, мне это не интересно":0})
    hleb_df["Разбираетесь ли вы в компьютерных играх?"] =     hleb_df["Разбираетесь ли вы в компьютерных играх?"].replace({"GG EZ": 3,"Играю, но не слежу за киберспортивной сценой": 2,                    "Играю только в змейку на телефоне":1,                    "...что за фигня написана в первом варианте ответа?":0})
    hleb_df = hleb_df.replace({"Любая движуха это круто!": 3,"Только действительно интересные": 2,                    "Ну, вероятно пара-тройка мероприятий стоит моего внимания":1,                    "На ютюбе запись посмотрю":0})
    hleb_df = hleb_df.replace({"Я спасу кота, выполню приказ": 3,"Только если топор дадите": 2,                    "Ну если мне уж совсем делать нечего":1,                    "Устанет - слезет":0})
    hleb_df = hleb_df.replace({"Да, это то что делает нас людьми": 3,"Ну, без пищи для ума прожить, конечно можно, но не так интересо": 2,                    "Не всем и не всегда":1,                    "GG EZ":0})
    hleb_df = hleb_df.replace({"Да, не помня прошлого мы обречены на его повторение": 3,"Скорее да чем нет": 2,                    "Только без часовых лекций, пожалуйста":1,                    "Жить надо настоящим":0})
    hleb_df = hleb_df.replace({"Да, буду идти пока сам(а) не упаду": 3,"Если это близкий мне человек - то разумеется": 2,                    "Я думаю принесу больше пользы своим умом а не ногами":1,                    "Для этого есть МЧС и они прекрасно справятся":0})
    hleb_df = hleb_df.rename(columns={"Отметка времени": "id", "Переведёте ли вы бабушку через дорогу?": "social",                         "Что бы вы сказали другу если бы он попросил принести вас таблетки? ": "med",                         "Посадили ли бы вы у себя во дворе дерево/кустарник ?": "eco",                         "Любите наблюдать за спортивными играми/соревнованиями?": "sport",                         "Разбираетесь ли вы в компьютерных играх?": "cyber",                         "Насколько вы любите посещать общественные мероприятия?": "events",                         "Спасли бы вы котёнка с дерева?": "animals",                         "Необходима ли культура человеку?": "culture",                         "Интересна ли вам история?": "ww2",                        "Готовы ли вы часами пробираться сквозь бурелом ради спасения человека?": "search"})
    return hleb_df


# In[22]:


hleb_df = hleb_df.replace({"Да, обязательно": 3,"Да, если не очень занят(а)": 2,                "Нет, если вижу что она скорее всего справится сама":1,                "Могу перевести только на английский":0})
hleb_df = hleb_df.replace({"Соглашусь, даже если очень занят": 3,'Только легальные и из аптеки, а не "там около трубы закопаны"': 2,                "Соглашусь, если больше совсем уж некому":1,                "Почему бы не сходить самому или не вызвать скорую?":0})
hleb_df = hleb_df.replace({"Да, озеленение это круто. Надеюсь переживет 9 месяцев Ямальской зимы.": 3,"Если мне дадут саженцы - почему нет?": 2,                "Скорее нет чем да":1,                "Для этого есть специализированные службы, которые лучше справятся":0})
hleb_df = hleb_df.replace({"Да, и сам люблю участвовать в них": 3,"Да, это потрясающий эмоциональный аттракцион": 2,                "Только скоростное вязание крючком":1,                "Нет, мне это не интересно":0})
hleb_df["Разбираетесь ли вы в компьютерных играх?"] = hleb_df["Разбираетесь ли вы в компьютерных играх?"].replace({"GG EZ": 3,"Играю, но не слежу за киберспортивной сценой": 2,                "Играю только в змейку на телефоне":1,                "...что за фигня написана в первом варианте ответа?":0})
hleb_df = hleb_df.replace({"Любая движуха это круто!": 3,"Только действительно интересные": 2,                "Ну, вероятно пара-тройка мероприятий стоит моего внимания":1,                "На ютюбе запись посмотрю":0})
hleb_df = hleb_df.replace({"Я спасу кота, выполню приказ": 3,"Только если топор дадите": 2,                "Ну если мне уж совсем делать нечего":1,                "Устанет - слезет":0})
hleb_df = hleb_df.replace({"Да, это то что делает нас людьми": 3,"Ну, без пищи для ума прожить, конечно можно, но не так интересо": 2,                "Не всем и не всегда":1,                "GG EZ":0})
hleb_df = hleb_df.replace({"Да, не помня прошлого мы обречены на его повторение": 3,"Скорее да чем нет": 2,                "Только без часовых лекций, пожалуйста":1,                "Жить надо настоящим":0})
hleb_df = hleb_df.replace({"Да, буду идти пока сам(а) не упаду": 3,"Если это близкий мне человек - то разумеется": 2,                "Я думаю принесу больше пользы своим умом а не ногами":1,                "Для этого есть МЧС и они прекрасно справятся":0})


# In[29]:


hleb_df = hleb_df.rename(columns={"Отметка времени": "id", "Переведёте ли вы бабушку через дорогу?": "social",                         "Что бы вы сказали другу если бы он попросил принести вас таблетки? ": "med",                         "Посадили ли бы вы у себя во дворе дерево/кустарник ?": "eco",                         "Любите наблюдать за спортивными играми/соревнованиями?": "sport",                         "Разбираетесь ли вы в компьютерных играх?": "cyber",                         "Насколько вы любите посещать общественные мероприятия?": "events",                         "Спасли бы вы котёнка с дерева?": "animals",                         "Необходима ли культура человеку?": "culture",                         "Интересна ли вам история?": "ww2",                        "Готовы ли вы часами пробираться сквозь бурелом ради спасения человека?": "search"})


# In[30]:


hleb_df


# In[ ]:





# In[31]:


#возвращает вектор заинтересованности волонтера по его группам вк
def groups_to_dict (user_json):
 
    user_groups = []
    for i in user_json['groups']:
        user_groups.append(i['thematic'])

    
     events = {'name': 'events', 
              'words': ['Товары для праздников','Тренинг, семинар',\
                        'Шоу, передача',\
                        'Школа','Цветы','Хостел','Фотограф','Фото- и видеосъёмка',\
                        'Фестиваль','Объявления', 'Культура, искусство','Культурный центр'\
                       'Музей, галерея, выставка','Организация праздников','Кинотеатр'\
                       'Концертный зал','Ночной клуб','Торгово-развлекательный центр',\
                       'Фестиваль','Цирк','Бар, паб']}
    culture = {'name': 'culture', 
               'words': ['Литература','Товары для творчества','Туристическое агентство',\
                         'Туры, экскурсии','Компьютеры', 'Компьютерные игры',\
                         'Школа','Цирк','Цветы','Книга','Художник / Художница','Фильм',\
                        'Творчество','Кино','Искусство и развлечения']}
    sport = {'name': 'sport', 
             'words': ['Спорт','Велосипеды','Водный транспорт','Школа','Хоккейная команда',\
                       'Футбольная команда','Фото- и видеосъёмка','Фитнес-центр',\
                       'Летние виды спорта', 'Спортивная команда', 'Спортивная организация'\
                       ,'Спортивное питание','Спортивный клуб','Спортивный комплекс',\
                       'Спортсмен / Спортсменка','Здоровый образ жизни','Хоккей', 'Футбол']}
    med = {'name': 'med', 
           'words': ['Медицина','Аптека, оптика','Больница','Косметология',\
                     'Лекарственный препарат','Медицинская услуга','Медицинский центр',\
                      'Стоматология']}
    ww2 = {'name': 'ww2', 
           'words': ['Архив','Библиотека','Дом культуры','Антиквариат','Пенсионный фонд','История',\
                    'Военное дело']}
    cyber = {'name': 'cyber', 
             'words': ['Компьютерная техника','Киберспортивная команда',\
                    'Киберспортивная организация', 'Киберспортсмен',\
                      'Компьютеры', 'Компьютерные игры','Видеоигра','Стример','Киберспорт']}
    social = {'name': 'social', 
              'words': ['Молодёжное движение','Торговый центр','Тренинг, семинар','Управляющая компания',\
                        'Юридические услуги',\
                        'Химчистка, прачечная','Финансы и страхование','Финансовые рынки',\
                       'Дискуссионный клуб','Общество','Благотворительная организация']}
    eco = {'name': 'eco', 
           'words': ['Туризм и отдых','Активный отдых','Визовый центр','Гостиница',\
             'Информационный портал','Летний лагерь','Национальный парк, заповедник','Охота и рыбалка',\
             'Продажа билетов, бронирование гостиниц','Санаторий, дом отдыха','Туристическое агентство',\
             'Туры, экскурсии','Хостел']}
    animals = {'name': 'animals', 
               'words': ['Животные','Ветеринарная клиника','Зоомагазин',\
                         'Товары для животных','Услуги для владельцев животных','Домашние и дикие животные']}
    search = {'name': 'search', 
              'words': ['Благотворительная организация','Туризм и отдых','Активный отдых',\
                'Национальный парк, заповедник','Охота и рыбалка','Здоровый образ жизни']}
    
    competences = [events, culture, sport, med, ww2, cyber, social, eco, animals, search]
   
    user_vec = {elem['name']:0 for elem in competences}
       

   #собираем сырой вектор, не нормализированный
    for comp in competences:
        for key_word in comp['words']:
            if key_word in user_groups:
                user_vec[comp['name']] = user_groups.count(key_word)
              
    #стандартизуем вектор к 0..1
    a = np.fromiter(user_vec.values(), dtype=float)
    minval = np.min(a)
    maxval = np.max(a[np.nonzero(a)])

    if (maxval - minval != 0):
        for key in user_vec:
            if user_vec[key] != 0:
                user_vec[key] -= minval
                user_vec[key] /= (maxval - minval)
                user_vec[key] *= 10
                user_vec[key] = int(user_vec[key])
  
    
    return json.dumps(user_vec)
   
    


# In[ ]:




